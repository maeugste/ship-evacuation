% post processing of output.mat data from simulation
% to run, you need to load the output first:
% load('output_FILENAME');

% tabula rasa
clc

% read in data from output a
agents_per_floor_1 = a.agents_per_floor;
config_1 = a.config;
exit_left_1 = a.exit_left;
simulation_time_real_1 = a.simulation_time;
dt_1 = config_1.dt;
deleted_agents_1 = a.deleted_agents;

% read in data from output b
agents_per_floor_2 = b.agents_per_floor;
config_2 = b.config;
exit_left_2 = b.exit_left;
simulation_time_real_2 = b.simulation_time;
dt_2 = config_2.dt;
deleted_agents_2 = b.deleted_agents;

% get users screen size
screen_size = get(0, 'ScreenSize');

% agents on boat
agents_on_boat_1 = sum(agents_per_floor_1(:,1:1:length(agents_per_floor_1)));

% agents on boat
agents_on_boat_2 = sum(agents_per_floor_2(:,1:1:length(agents_per_floor_2)));





% recalculate agents on boat
agents_on_boat_1 = sum(agents_per_floor_1(:,1:1:steps_1));
agents_start_1 = agents_on_boat_1(1);
agents_left_1 = agents_start_1-agents_on_boat_1;
agents_per_floor_1 = agents_per_floor_1(:,1:1:steps_1);
exit_left_1 = exit_left_1(:,1:1:steps_1);




agents_on_boat_2 = sum(agents_per_floor_2(:,1:1:steps));
agents_start_2 = agents_on_boat_2(1);
agents_left_2 = agents_start-agents_on_boat_2;
agents_per_floor_2 = agents_per_floor_2(:,1:1:steps);
exit_left = exit_left_2(:,1:1:steps);

% plot agents left over time
f1 = figure;
hold on
grid on
set(gca,'XTick',[1:1:8],'FontSize',16)
plot(time/60,agents_left_1/agents_start_1*100,'LineWidth', 2)
hold on
plot(time/60,agents_left_2/agents_start_2*100,'LineWidth', 2)
axis([0 8 0 100])
title(sprintf('rescued agents (of total %i agents)',agents_start));
xlabel('time [min]')
ylabel('rescued agents out of all agents [%]')


% scale plots up to screen size
set(f1, 'Position', [0 0 screen_size(3) screen_size(4) ] );
set(f2, 'Position', [0 0 screen_size(3) screen_size(4) ] );
set(f3, 'Position', [0 0 screen_size(3) screen_size(4) ] );


% print out

fprintf('Timestep: %f s\n', dt)
fprintf('Steps simulated: %i\n', steps)
fprintf('Simulation time: %f min\n', simulation_time_sim/60)
fprintf('Agents on ship on start: %i\n', agents_start)
fprintf('Agents on ship on simulation end: %i\n', agents_on_boat(end))
fprintf('Agents deleted due to NaN-positions: %i\n', deleted_agents)




